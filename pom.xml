<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.0.1</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.marcnuri.demo.jkube</groupId>
  <artifactId>jkube-helm</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>jkube-helm</name>
  <description>Demo project for Spring Boot and JKube</description>
  <properties>
    <java.version>17</java.version>
    <jkube.artifactId>kubernetes-maven-plugin</jkube.artifactId>
    <jkube.version>1.11.0</jkube.version>
    <jkube.createExternalUrls>true</jkube.createExternalUrls>
    <jkube.generator.name>marcnuri/repo-for-tests</jkube.generator.name>
    <applicationPort>8082</applicationPort>
    <!-- HELM repository settings (OpenShift) -->
    <jkube.helm.snapshotRepository.name>chart-museum</jkube.helm.snapshotRepository.name>
    <jkube.helm.snapshotRepository.url>http://chart-museum.dev-sandbox.marcnuri.com/api/charts</jkube.helm.snapshotRepository.url>
    <jkube.helm.snapshotRepository.type>CHARTMUSEUM</jkube.helm.snapshotRepository.type>
    <jkube.helm.snapshotRepository.username>secret</jkube.helm.snapshotRepository.username>
    <jkube.helm.snapshotRepository.password>shouldnt-be-here-use-env</jkube.helm.snapshotRepository.password>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>${jkube.artifactId}</artifactId>
        <version>${jkube.version}</version>
        <configuration>
          <helm>
            <parameters>
              <parameter>
                <name>deployment.replicas</name>
                <value>1</value>
              </parameter>
              <parameter>
                <name>deployment.container.name</name>
                <value>{{ .Chart.Name | lower | nospace }}</value>
              </parameter>
              <parameter>
                <name>deployment.container.imagePullPolicy</name>
                <value>Always</value>
              </parameter>
              <parameter>
                <name>ingress.host</name>
                <value>some-serious-host.dev-sandbox.marcnuri.com</value>
              </parameter>
              <parameter>
                <name>application.greeting</name>
                <value>Production World</value>
              </parameter>
            </parameters>
          </helm>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <deployment.replicas>1</deployment.replicas>
        <deployment.container.name>${project.artifactId}</deployment.container.name>
        <deployment.container.imagePullPolicy>IfNotPresent</deployment.container.imagePullPolicy>
        <application.greeting>Development World</application.greeting>
      </properties>
    </profile>
    <profile>
      <id>openshift</id>
      <properties>
        <jkube.artifactId>openshift-maven-plugin</jkube.artifactId>
        <jkube.openshift.generateRoute>false</jkube.openshift.generateRoute> <!-- Use ingress fragment instead -->
        <ingress.host>helm.dev-sandbox.marcnuri.com</ingress.host>
      </properties>
    </profile>
    <profile>
      <id>minikube</id>
      <properties>
        <ingress.host>$(minikube ip).nip.io</ingress.host>
      </properties>
    </profile>
  </profiles>
</project>
